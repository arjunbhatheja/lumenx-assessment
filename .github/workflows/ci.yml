name: EnergeX CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-lumen:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: energex_db
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
        
    - name: Install dependencies
      run: |
        cd lumen-api
        composer install
        
    - name: Configure environment
      run: |
        cd lumen-api
        cp .env.example .env
        sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
        sed -i 's/DB_DATABASE=energex_db/DB_DATABASE=energex_db/' .env
        sed -i 's/DB_USERNAME=root/DB_USERNAME=root/' .env
        sed -i 's/DB_PASSWORD=/DB_PASSWORD=password/' .env
        echo "APP_KEY=$(openssl rand -base64 32)" >> .env
        echo "JWT_SECRET=$(openssl rand -base64 32)" >> .env
        
    - name: Run tests
      run: |
        cd lumen-api
        vendor/bin/phpunit
      env:
        DB_HOST: 127.0.0.1
        DB_DATABASE: energex_db
        DB_USERNAME: root
        DB_PASSWORD: password

  test-nodejs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        cd nodejs-cache
        npm ci
        
    - name: Run tests
      run: |
        cd nodejs-cache
        npm test

  build:
    needs: [test-lumen, test-nodejs]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker images
      run: |
        docker-compose build